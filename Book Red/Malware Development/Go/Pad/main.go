package main

import (
	"Pad/banner"
	"flag"
	"fmt"
	"github.com/fatih/color"
	"io/ioutil"
	"log"
	"strings"
)

type Flags struct {
	Infile string
	Save   string
	Tamaño int
}

func options() *Flags {
	Infile := flag.String("F", "", "inserta la ruta del payload")
	Save := flag.String("S", "", "inserta el nombre final del payload")
	Tamaño := flag.Int("T", 0, "ingresa el tamaño del payload")
	flag.Parse()
	return &Flags{Infile: *Infile, Save: *Save, Tamaño: *Tamaño}
}
func main() {
	color.Yellow(banner.Banner)
	menu := options()
	if menu.Infile == "" {
		log.Fatal("Error Inserta la ruta del payload")
	}
	if menu.Save == "" {
		log.Fatal("inserta el nombre final del payload")
	}

	// datos contiene todos los bytes del payload
	Datos, err := ioutil.ReadFile(menu.Infile)
	if err != nil {
		log.Fatal(err)
	}

	if menu.Tamaño > 0 {
		Datos = incremento(Datos, menu.Tamaño)
	}
	ioutil.WriteFile(menu.Save, Datos, 0777)
	fmt.Println("payload saved successfully [+]")
}

func incremento(buffer []byte, si int) []byte {
	valor := "0"
	resultado1 := strings.Repeat(valor, si*1024*1024)
	suma := string(buffer) + resultado1
	pefinal := []byte(suma)
	return pefinal

}
