package main

import (
	"fmt"
	"golang.org/x/sys/windows/registry"
	"log"
)

func createR(value string) {

	k, err := registry.OpenKey(registry.CURRENT_USER, `SOFTWARE\Wow6432Node\`, registry.QUERY_VALUE|registry.SET_VALUE)
	if err != nil {
		log.Fatal(err)
	}
	if err := k.SetStringValue("FirefoxUpdate", value); err != nil {
		log.Fatal(err)
	}

}

func readR() (string, error) {
	k, err := registry.OpenKey(registry.CURRENT_USER, `SOFTWARE\Wow6432Node\`, registry.QUERY_VALUE)
	if err != nil {
		log.Fatal(err)
	}
	defer k.Close()
	version, _, err := k.GetStringValue("FirefoxUpdate")
	fmt.Println(version)
	return version, err

}

func main() {
	createR("payload codificado")

	//content, _ := readR()
	//fmt.Println(content)

}
