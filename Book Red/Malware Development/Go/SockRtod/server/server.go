package main

import (
	"SockRtod/server/help"
	"flag"
	"fmt"
        "github.com/fatih/color"
	"log"
)



var banner = `


         ;               ,           
         ,;                 '.         
        ;:                   :;        
       ::                     ::       
       ::                     ::       
       ':                     :        
        :.                    :        
     ;' ::                   ::  '     
    .'  ';                   ;'  '.    
   ::    :;                 ;:    ::   
   ;      :;.             ,;:     ::   
   :;      :;:           ,;"      ::   
   ::.      ':;  ..,.;  ;:'     ,.;:   
    "'"...   '::,::::: ;:   .;.;""'    
        '"""....;:::::;,;.;"""         
    .:::.....'"':::::::'",...;::::;.   
   ;:' '""'"";.,;:::::;.'""""""  ':;   
  ::'         ;::;:::;::..         :;  
 ::         ,;:::::::::::;:..       :: 
 ;'     ,;;:;::::::::::::::;";..    ':.
::     ;:"  ::::::"""'::::::  ":     ::
 :.    ::   ::::::;  :::::::   :     ; 
  ;    ::   :::::::  :::::::   :    ;  
   '   ::   ::::::....:::::'  ,:   '   
    '  ::    :::::::::::::"   ::       
       ::     ':::::::::"'    ::       
       ':       """""""'      ::       
        ::                   ;:        
        ':;                 ;:"        
-hrr-     ';              ,;'          
            "'           '"            
              '



`

func main() {
color.Yellow(banner)
	listen := flag.String("remote-listener", "0.0.0.0:9978", "Bind address port for remote listener. E.g. 0.0.0.0:9999")
	socks := flag.String("socks-listener", "127.0.0.1:1085", "Bind address and port for socks listener. E.g. 127.0.0.1:1080")

	tlsCert := flag.String("tls-cert", "./cert/cert.pem", "Path to TLS certificate PEM. E.g. certs/cert.pem")
	tlsKey := flag.String("tls-key", "./cert/key.pem", "Path to TLS cert key. E.g. certs/key.pem")

	connectBack := flag.String("rev", "185.243.215.74:9978", "Address for the remote client to connect back to. E.g. 127.0.0.1:9999")

	flag.Usage = func() {
		fmt.Println("Proxy3x")
	}
	flag.Parse()
	help.PrintClientConfigKey(*connectBack, *tlsCert)

	log.Println("Starting server...")
	go  help.RemoteListener(*listen, *tlsCert, *tlsKey)
	 help.SocksListener(*socks)
}

